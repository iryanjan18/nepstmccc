{"version":3,"sources":["../../../api/server/controllers/BookController.js"],"names":["util","Util","BookController","req","res","BookService","getAllBooks","allBooks","length","setSuccess","send","setError","body","title","price","description","newBook","addBook","createdBook","message","alteredBook","id","params","Number","updateBook","getABook","theBook","deleteBook","bookToDelete"],"mappings":"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","sourcesContent":["import BookService from '../services/BookService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\n\nclass BookController {\n  static async getAllBooks(req, res) {\n    try {\n      const allBooks = await BookService.getAllBooks();\n      if (allBooks.length > 0) {\n        util.setSuccess(200, 'Books retrieved', allBooks);\n      } else {\n        util.setSuccess(200, 'No book found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addBook(req, res) {\n    if (!req.body.title || !req.body.price || !req.body.description) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    const newBook = req.body;\n    try {\n      const createdBook = await BookService.addBook(newBook);\n      util.setSuccess(201, 'Book Added!', createdBook);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatedBook(req, res) {\n    const alteredBook = req.body;\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid Book ID');\n      return util.send(res);\n    }\n\n    try {\n      const updateBook = await BookService.updateBook(id, alteredBook);\n      if (!updateBook) {\n        util.setError(404, `Cannot find book with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Book updated', updateBook);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getABook(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid Book ID');\n      return util.send(res);\n    }\n\n    try {\n      const theBook = await BookService.getABook(id);\n\n      if (!theBook) {\n        util.setError(404, `Cannot find book with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Found Book', theBook);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async deleteBook(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid Book ID');\n      return util.send(res);\n    }\n\n    try {\n      const bookToDelete = await BookService.deleteBook(id);\n\n      if (bookToDelete) {\n        util.setSuccess(200, 'Book deleted');\n      } else {\n        util.setError(404, `The book ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default BookController;"],"file":"BookController.js"}